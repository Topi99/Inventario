<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEnviar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAC
        YQAAAmEBwTBV+gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASRSURBVHhe7dpr
        qGVjHMfxPfera2RG0pjm1jTuLxBTw6hJEy+IQdOYQpTiBS+8GC9QGqKUuxDxglwSRXghUsyIIkwuyZ3c
        73eO7+/0rO05v/3f5+ybs/fucepTZ//Wf631rHPWs9aznrVrIyMjRQvDkoRhScKwJGFYkjAsSRiWJAxL
        EoYl+feXWm0uFhRibnbctYW4DT9DSQl0rDpmHXvtGkRFJdCx177KgtLo2MMFJRnz4XtsgfpHng+7v3A9
        LsWPKauM+XBldnU8A7+nfJj9ghOz47oh5ZUxH+6vClPxsfguLRtGX+AIO6an0rLKmA9yoa1wAD5My4bJ
        O1hqx3JZWpZrCORqTMlW3AevwusG1QvYM2v/NNwKrxtdGIVyD2ZkG9kZfvoMoocxJ2v3nJR5XSUMK09g
        fraxGbgTXjcorsPUrL274Tl4XS4Mcy+ifjqlDUd9qZ/+xkXWRnXb1+C1Lgzd21hsOzgTf8BrJ9uvOMXa
        thIfwGsjYRj5DAfbjtbhB3jtZNFQdrW16Uh8Da9tJgyb0Uhxre3wIHwCr/2vvYsV1pYT0O5TbRiO5zec
        ajveF630t17RdWkva8NZ+BNeO5EwnIguOhdYA3bF0/DaXnsU82zfl6RlnQjDVm21hsyExg9e1ys3YVq2
        v6m4EV7XjjBsx12YnjVqCq6A13VDZ9zF1T7SfmbhQXhtu8KwXY/BT8tz0EmfdLrmnG7b3gXPwGs7EYad
        2IY9rKHr4c/f7fgGa2ybe6OXzyVh2Kk3scgafCg0hvDaibyPlbatFXgPXtuNMOyGxgQHWsMXYQe8tpmX
        sdC2cTi+hNd2Kwy7pUkU7w56MHkWXuseR/0BLK27H36C1/ZCGHZDI7Gz8wPIDkRX7nvh61Q0F1m/o9i6
        uqhqesvX6VYYdkqn+f7WcI0N8skV3SavQr6ebMnXS7X1R9v0WbNTus7k63UrDDuh8YDfCtfiYzyEnWzZ
        edBsrSZeN9kydRd1hY9wjC2bj14OtsKwHeqbm62RmjjRf1kDmKrudSyzukOwyrJV0HxetZ62oW3NtDo9
        jvfidV4YtkoPQH6rWoaX4LXyLdbn9Tl+TkazcYPuDP70pz/WG/DadoRhK25H/S1rapCeyCYa+Oi018uX
        /LqgMf1WeK3Tf/xc2+c8qPt5bavCcDyaANlojdgdD8Brx6OJysNwFJ5MWasegU/TbUYnt8owbOYVLLcd
        r0E/3ht8inXWFk2FtTsvEYaRmzE725kudHrq0ynttZNFF8hrMStrl77ooe7ptc2EYU7TYBuqHaSdLMF2
        eG2/6OHI7yYb0cp8ZRhWdOVdYhtWX+vnRGgzGiWej/ziuhzqtl6bC0PR6+T81NKU133wukGjAdSCrN2z
        cQu8rtIQ6F59UrWBtJHV0OOp1w6qz3G8HcNpUHf22obg6Gyl6bgc/bzQdUPzhfl7wuNSnmsIRvs8P4vx
        fMqGmUaKoy90+NHI0Zc3BG/hDkSny7DSvOLdiJ4kG4LS/P81ueK/KFn2V2WzW0SZX5aufilVGJYkDEsS
        hiUJw5KEYUnCsCRhWJIwLMdI7R8Aj5QyNqts8gAAAABJRU5ErkJggg==
</value>
  </data>
</root>